<args format='1.0' scope='/root' fixedCEL='/root' >
	<group name='imagineGlobalStatements' hideTitle='True' widget='pagedargs' closed='False' groupinherit='False'>
		<page name='general' open="True">
			<int name="integrator" widget="mapper" default="1">
				<hintdict name='options'>
					<int name="direct_illumination" value="0"/>
					<int name="path" value="1"/>
					<int name="path_distributed" value="2"/>
				</hintdict>
			</int>
			<int name="path_dist_diffuse_multiplier" default="3" conditionalVisOp='equalTo' conditionalVisPath='../integrator' conditionalVisValue='2' help="Diffuse ray multiplier for the PathDistributed integrator"/>
			<int name="path_dist_glossy_multiplier" default="2" conditionalVisOp='equalTo' conditionalVisPath='../integrator' conditionalVisValue='2' help= "Glossy ray multiplier for the PathDistributed integrator"/>

			<int name="enable_volumetrics" default="0" widget="checkBox" help="Enable the Volumetrics integrator. Needed for SSS and volumes."/>
			<int name="use_mis" default="1" widget="checkBox" help="Enable use of MIS."/>
			<int name="adaptive" default="0" widget="checkBox" help="Use adaptive criteria within integrators for stopping when final pixel noise variance levels reach a certain level."/>
			<float name="adaptive_variance_threshold" default="0.02" conditionalVisOp='equalTo' conditionalVisPath='../adaptive' conditionalVisValue='1'/>

			<int name="light_sampling" widget="mapper" default="0">
				<hintdict name='options'>
					<int name="Fully sample all lights" value="0"/>
					<int name="Importance sample lights (uniform)" value="1"/>
					<int name="Importance sample lights (weighted)" value="2"/>
				</hintdict>
			</int>
			<int name="light_samples" default="1" conditionalVisOp='notEqualTo' conditionalVisPath='../light_sampling' conditionalVisValue='0' help="The number of light samples to use per pixel sample."/>

			<int name="spp" default="64" help="The overall number of samples per pixel. Perfect square numbers (49, 64, 144) will give slightly better sample stratification."/>
			<int name="iterations" default="1" help="The number of iteration passes to split the above samples into"/>

			<int name="fast_live_renders" default="0" help="Use a smaller number of samples per pixel for live renders, making each iteration much faster."/>

			<int name="reconstruction_filter" widget="mapper" default="3">
				<hintdict name='options'>
					<int name="box" value="0"/>
					<int name="triangle" value="1"/>
					<int name="gaussian" value="2"/>
					<int name="mitchell_netravali" value="3"/>
					<int name="blackman_harris" value="4"/>
					<int name="catmull-rom" value="5"/>
					<int name="lanczos-sync" value="6"/>
				</hintdict>
			</int>

			<int name="depth_of_field" default="0" widget="checkBox"/>
			<int name="motion_blur" default="0" widget="checkBox"/>
		</page>
		<page name='light paths' open="True">
			<int name="max_depth_overall" default="4" help="Maximum ray bounce count"/>
			<int name="max_depth_diffuse" default="3" help=""/>
			<int name="max_depth_glossy" default="3" help=""/>
			<int name="max_depth_reflection" default="5" help=""/>
			<int name="max_depth_refraction" default="5" help=""/>
		</page>
		<page name='geometry' open="True">
			<int name="flip_t" default="0" widget="mapper" help="Flip the t (V) coordinate of st texture coordinates.">
				<hintdict name='options'>
					<int name="None" value="0"/>
					<int name="Full" value="1"/>
					<int name="Component-wise" value="2"/>
				</hintdict>
			</int>
			<int name="enable_subdivision" default="0" widget="checkBox" help="Enable using subdivision surfaces. With this off, subdmesh types will be interpreted as standard polygons."/>
		</page>
		<page name='scene' open="True">
			<int name="bake_down_scene" default="0" widget="checkBox" help="Whether to bake down the scene to one single acceleration structure. Build time is longer and uses more memory, and doesn't support instancing or transform motion blur, but intersection time can be drastically reduced when there are lots of overlapping objects."/>
			<int name="specialise_assembly_types" default="1" widget="checkBox" help="Detect locations of assembly type and interpret them as Compound Objects. This can speed up rendering complex objects with overlapping geometry objects significantly."/>
			<int name="deduplicate_vertex_normals" default="1" widget="checkBox" help="de-duplicate per-vertex normals for meshes. Build time is longer (and peak memory is higher), but can reduce final memory usage significantly in some cases."/>
			<int name="use_geo_normals" default="1" widget="checkBox" help="Use normals from geo attributes"/>

			<int name="triangle_type" widget="mapper" default="0" help="Triangle type to use. Fast uses the 48-byte Shevtsov triangle intersection test which is very fast, but caches extra info, so requires 48 bytes per triangle. Compact uses the Moller intersection algorithm, which calculates everything on-the-fly, requiring 4 bytes per triangle. Compact is on average 30-65% slower than Fast.">
				<hintdict name='options'>
					<int name="Fast" value="0"/>
					<int name="Compact" value="1"/>
				</hintdict>
			</int>
			<int name="geometry_quantisation_type" widget="mapper" default="0" help="Geometry compression. Standard normal compresses 96-bit float normals to 32-bit normals. Standard UV compresses UV coords to a limited range of -10.0 - 10.0, but at constant accuracy across that range.">
				<hintdict name='options'>
					<int name="None" value="0"/>
					<int name="Standard normal" value="1"/>
					<int name="Standard normal, standard UV" value="2"/>
				</hintdict>
			</int>
			<int name="specialised_triangle_type" widget="mapper" default="0" help="Triangle type to use for specialised geometry types. Triangle Packets is fastest, but uses most memory. Fast uses 48-byte trianges, compact uses 4/0 bytes per triangle depending on properties/attributes of shapes.">
				<hintdict name='options'>
					<int name="Triangle Packets" value="0"/>
					<int name="Fast" value="1"/>
					<int name="Compact" value="2"/>
				</hintdict>
			</int>
			<int name="scene_accel_structure" widget="mapper" default="1" help="Scene acceleration type to use. KDTree is generally faster for more sparse scenes with lots of empty space. For dense scenes with lots of overlapping objects, BVH can be significantly faster.">
				<hintdict name='options'>
					<int name="KDTree" value="0"/>
					<int name="BVH" value="1"/>
				</hintdict>
			</int>
			<float name="ray_epsilon" default="0.0001"/>
			<float name="shadow_ray_epsilon" default="0.0001"/>
		</page>

		<page name='advanced' open="False">
			<int name="print_statistics" default="1" widget="mapper">
				<hintdict name='options'>
					<int name="None" value="0"/>
					<int name="Normal" value="1"/>
					<int name="Verbose" value="2"/>
				</hintdict>
			</int>
			<int name="bucket_size" widget="mapper" default="48">
				<hintdict name='options'>
					<int name="16" value="16"/>
					<int name="32" value="32"/>
					<int name="48" value="48"/>
					<int name="64" value="64"/>
					<int name="96" value="96"/>
					<int name="128" value="128"/>
				</hintdict>
			</int>
			<int name="bucket_order" widget="mapper" default="4">
				<hintdict name='options'>
					<int name="horizontal rows" value="0"/>
					<int name="horizontal rows bounce" value="1"/>
					<int name="vertical rows" value="2"/>
					<int name="vertical rows bounce" value="3"/>
					<int name="spiral" value="4"/>
					<int name="horizontal spread" value="5"/>
					<int name="hilbert" value="6"/>
				</hintdict>
			</int>
		</page>

		<page name='camera' open="False">
			<int name="cam_projection_type" widget="mapper" default="0">
				<hintdict name='options'>
					<int name="perspective" value="0"/>
					<int name="spherical" value="1"/>
					<int name="orthographic" value="2"/>
				</hintdict>
			</int>
			<float name="cam_focal_distance" default="16.0"/>
			<float name="cam_aperture_size" default="0.0"/>
			<int name="cam_aperture_type" widget="mapper" default="0">
				<hintdict name='options'>
					<int name="circle" value="0"/>
					<int name="polygon (blades)" value="1"/>
				</hintdict>
			</int>
		</page>
	</group>
</args>

